
"""
One of the criteria the judges would like to evaluate your solution on is the top speed. We would like you to implement a simple display of current and top speed alongside your output image.



To do this, we prepared code snippets you can insert into your code which will take care of this for you:
"""


# 1) Make a global variable at the top of computer_vision.py:

global topspeed
topspeed = 0

# 2) Add the show_speed function to the Navigator class:

	def show_speed(self, img):
        global topspeed
        h, w = img.shape[:2]
        v = self.world.player.get_velocity()
        speed = round((3.6 * math.sqrt(v.x**2 + v.y**2 + v.z**2)),2)
        topspeed = speed if topspeed < speed else topspeed 
        square_img = np.zeros_like(img, np.uint8)
        square_img = cv2.rectangle(square_img, (40, 30), (300, 80), (255,255,255), cv2.FILLED)
        img = cv2.addWeighted(img, 1, square_img, 0.2, 1)
        
        font = cv2.FONT_HERSHEY_SIMPLEX
        fontScale = 0.5 
        color = (0, 0, 0)
        thickness = 1
        line1=f'Speed: {speed} km/h'
        org1 = (50, 50)
        line2=f'Top speed: {topspeed} km/h'
        org2 = (50, 70)
        img = cv2.putText(img, line1, org1, font, 
                   fontScale, color, thickness, cv2.LINE_AA)
        img = cv2.putText(img, line2, org2, font, 
                   fontScale, color, thickness, cv2.LINE_AA)
        
        return img

# 3) Apply the show_speed function before showing the image, e.g.:
	
        cv2.imshow("OpenCV camera view", self.show_speed(self.camera_rgb.image))